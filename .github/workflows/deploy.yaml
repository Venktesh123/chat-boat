name: Deploy CHATBOT to EC2 ðŸš€
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create environment file
        run: |
          echo "ENV=${{ secrets.ENV }}" > env
          echo "EC2_USERNAME=${{ secrets.EC2_USERNAME }}" >> env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> env

      - name: Create sample transcripts
        run: |
          echo "Welcome to today's lecture on AI and ML." > cleaned_transcript.txt
          echo "This is a sample transcript file." >> cleaned_transcript.txt
          echo "Welcome to today's lecture on AI and ML." > combined_transcript.txt
          echo "This is a sample combined transcript." >> combined_transcript.txt

      - name: Create Python files
        run: |
          # Scripts are created from source files in the repo
          cp python/app.py app.py
          cp python/transcription.py transcription.py
          cp scripts/deploy.sh deploy.sh
          chmod +x deploy.sh
          cp config/requirements.txt requirements.txt

      - name: Copy files to EC2
        run: |
          scp -o StrictHostKeyChecking=no -r app.py transcription.py requirements.txt env deploy.sh cleaned_transcript.txt combined_transcript.txt ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/

      - name: Run deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "chmod +x ./deploy.sh && ./deploy.sh"

      - name: Cleanup
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa
