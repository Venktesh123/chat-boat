name: Deploy CHATBOT to EC2
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up environment
        run: |
          # Create env file from secrets
          touch env
          if [ -n "${{ secrets.ENV }}" ]; then echo "ENV=${{ secrets.ENV }}" >> env; fi
          if [ -n "${{ secrets.EC2_USERNAME }}" ]; then echo "EC2_USERNAME=${{ secrets.EC2_USERNAME }}" >> env; fi
          if [ -n "${{ secrets.GOOGLE_API_KEY_4 }}" ]; then echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY_4 }}" >> env; fi
          if [ -n "${{ secrets.GOOGLE_API_KEY_1 }}" ]; then echo "GOOGLE_API_KEY_1=${{ secrets.GOOGLE_API_KEY_1 }}" >> env; fi
          if [ -n "${{ secrets.GOOGLE_API_KEY_2 }}" ]; then echo "GOOGLE_API_KEY_2=${{ secrets.GOOGLE_API_KEY_2 }}" >> env; fi
          if [ -n "${{ secrets.GOOGLE_API_KEY_3 }}" ]; then echo "GOOGLE_API_KEY_3=${{ secrets.GOOGLE_API_KEY_3 }}" >> env; fi

          # Set up SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Package code
        run: tar -czf deploy.tar.gz --exclude='.git' --exclude='.github' .

      - name: Deploy to EC2
        run: |
          # Check connectivity
          if timeout 10 bash -c "</dev/tcp/${{ secrets.EC2_HOST }}/22"; then
            # Copy files to EC2
            scp -o ConnectTimeout=10 deploy.tar.gz ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/
            
            # Execute deployment script
            ssh -o ConnectTimeout=30 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "mkdir -p ~/deployment && tar -xzf deploy.tar.gz -C ~/deployment && cd ~/deployment && chmod +x ./scripts/deploy.sh && ./scripts/deploy.sh && cd ~ && rm -rf deploy.tar.gz deployment"
            
            echo "Deployment completed successfully"
          else
            echo "Could not connect to EC2 instance at ${{ secrets.EC2_HOST }}"
            echo "Deployment skipped due to connectivity issues"
            exit 1
          fi
